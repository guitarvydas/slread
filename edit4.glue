Ohm {
Grammar [DefName @Inheritance klb @Rule krb = [[${DefName} ${Inheritance} ${klb} ${Rule} ${krb}]]
Inheritance [kinherit DefName] = [[${kinherit} ${DefName}]]

Rule [DefName @FormalParameterList @Description defineOp RuleBody] = 
[[${DefName} ${FormalParameterList} ${Description} ${defineOp} ${RuleBody}]]

Comment [c] = [[${c}]]

defineOp [s] = [[${c}]]

RuleBody [Expr @Tag] = [[${Expr} ${Tag}]]

SingleLineComment [kss CommentToEOL] [[${kss} ${CommentToEOL}]]

MultiLineComment [ksa @CommentToEOL kas] = [[${ksa} ${CommentToEOL} ${kas}]]

CommentToEOL [commentText eol] = [[${commentText} ${eol}]]

FormalParameterList [klt RefName CommaName kgt] = [[${klt} ${RefName} ${CommaName} ${kgt}]]

Description [klp commentText krp] = [[${klp} ${commentText} ${klp}]]
CommaName [@kcomma @RefName] = [[${kcomma} ${RefName}]]

Expr [TaggedItemSequence @Alternate] = [[${TaggedItemSequence} ${Alternate}]]
Alternate (Alternate) = "|" TaggedItemSequence
Tag (tag) = "--" TagName

TaggedItemSequence = ItemSequence Tag?
ItemSequence = Item+
Item = Lexification
Lexification = "#"? Prefixed
Prefixed = Prefix? Suffixed
Prefix = "&" | "~"

Suffixed = Primary Suffix?
Suffix = "*" | "+" | "?"
Primary = TerminalRange | Terminal | NestedExpr | RuleApplication
Terminal = string
TerminalRange = Terminal ".." Terminal
RuleApplication = RefName ActualParameterList?
NestedExpr = "(" Expr ")"

ActualParameterList = "<" Expr CommaExpr? ">"
CommaExpr = ("," Expr)+
TagName = name ~defineOp
RefName = name ~defineOp
DefName = name

string = dq (stringChar+)? dq
dq = "\""
stringChar
  = "\\" "n" -- newline
  | "\\" "t" -- tab
  | "\\" "\"" -- dquote
  | notDQ    -- other
notDQ = ~dq any

name = nameFirst nameRest?
nameFirst (nameFirst) = letter | "_"
nameRest = (digit | nameFirst)+

commentText = (~nl any)+ eol

eol = (nl | end)
nl = "\n"
}