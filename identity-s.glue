main [ Header     body] = [[ ${Header} ${body}]]
Header [ kdefs ident Provides Returns Uses] = [[ ${kdefs} ${ident} ${Provides} ${Returns} ${Uses}]]
Provides [ kprovides kcolon klbracket @ident krbracket] = [[ ${kprovides} ${kcolon} ${klbracket} ${ident} ${krbracket}]]
Returns [ kreturns kcolon CrossProductType] = [[ ${kreturns} ${kcolon} ${CrossProductType}]]
Uses [ kuses kcolon klbracket @ident krbracket] = [[ ${kuses} ${kcolon} ${klbracket} ${ident} ${krbracket}]]
CrossProductType [ klbrace @ident krbrace] = [[ ${klbrace} ${ident} ${krbrace}]]
body [ @bodyClause] = [[ ${bodyClause}]]
bodyClause [x spaces] = [[${x}${spaces}]]
Var [ kvar ident] = [[ ${kvar} ${ident}]]
Entry [ kentry ident Params body] = [[ ${kentry} ${ident} ${Params} ${body}]]
Def [ kdef ident Params body] = [[ ${kdef} ${ident} ${Params} ${body}]]
Let [ klet klbracket ident expression krbracket kin expression] = [[ ${klet} ${klbracket} ${ident} ${expression} ${krbracket} ${kin} ${expression}]]
Cond [ kcond klbrace @ExpressionPair kelse expression krbrace] = [[ ${kcond} ${klbrace} ${ExpressionPair} ${kelse} ${expression} ${krbrace}]]
expression [x] = [[${x}]]
expression_compound [klbrace body krbrace] = [[${klbrace}${body}${krbrace}]]
sexpr_nested [x] = [[${x}]]
sexpr_flat [x] = [[${x}]]
NestedSexpr [ klpar @sexpr krpar] = [[ ${klpar} ${sexpr} ${krpar}]]
ExpressionPair [predicate expression] = [[${predicate} ${expression}]]
Params_empty [klpar krpar] = [[${klpar}${krpar}]]
Params_args [klpar @ident krpar] = [[${klpar}${ident}${krpar}]]

atom [a] = [[${a}]]
gop [k] = [[${k}]]
string [ dq1 @any dq2] = [[ ${dq1}${any}${dq2}]]
dq [ kdquote] = [[ ${kdquote}]]
ident [@identChar lookahead] = [[${identChar}]]
identChar [any] = [[${any}]]
keyword [ x separator] = [[ ${x}${separator}]]
ws [c] = [[${c}]]
blank [ k ] = [[${k}]]
tab [ktag] = [[${ktag}]]
nl [ knewline] = [[${knewline}]]
bracket [x] = [[${x}]]
separator [x] = [[${x}]]
